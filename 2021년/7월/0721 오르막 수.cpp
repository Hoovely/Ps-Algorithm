// 백준_11057_오르막 수_DP_실버 1 

#include <iostream>
using namespace std;

int n;
long long dp[1001][10];
int mod = 10007;

int main()
{
	cin >> n;
	
	for(int i=0;i<10;i++) dp[1][i] = 1;
	
	for(int i=2;i<n+1;i++)
	{
		for(int j=0;j<10;j++)
		{
			if (j==0) dp[i][0] = 1;
			else dp[i][j] = (dp[i-1][j] + dp[i][j-1]) % mod;
		}
	}
	
	long long sum = 0;
	for(int i=0;i<10;i++) sum += dp[n][i];
	
	cout << sum % mod; 
}

//1 -- 0 1 2 ... 9 == 10
//2 -- 00 01 02 ... 09 == 10
//	 11 12 13 ... 19 == 9
//	 22 23 24 ... 29 == 8
//	 					7...
//	 				
//	 				== 55, 10*11/2
//	 				
//3 -- 000 001 002 ... 10
//	 011 012 013 ... 9
//	 ...
//	 099 ... 1 ==== 55
//	 
//	 111 112 113 ... 9
//	 
//	 55 45 36 
//	 10*11/2 + 9*10/2 + 8*9/2 ... 
//	 
//0 1 2 3 4 5 6 7 8 9	 
//1 1 1 1 1 1 1 1 1 1
//1 2 3 4 5 6 7 8 9 10
//1 3 6 10 15 21 28 36 45 55
